name: Kraken2 DB Release

on:
    push:
      tags:
        - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container: quay.io/nexomis/kraken2:2.1.3

    strategy:
      matrix:
        include:
          - ACC_ID: GCF_000001635.27
            ACC_NAME: GRCm39
            LIBS: ""
            NAME: mouse
            VERSION: 1.0.0
            TAXID: 9606
          - ACC_ID: GCF_000001405.40
            ACC_NAME: GRCh38.p14
            LIBS: ""
            NAME: human
            VERSION: 1.0.0
            TAXID: 9606

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get -y install --no-install-recommends wget gzip rsync pigz
          apt-get install --only-upgrade ca-certificates

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Build and compress database
        if: github.event.release.tag_name == "v${{ matrix.VERSION }}"
        run: |
          bash build_custom_db.sh -i ${{ matrix.ACC_ID }} -j ${{ matrix.TAXID }} -n ${{ matrix.ACC_NAME }} -l "${{ matrix.LIBS }}" -o ${{ matrix.NAME }} -t 4
          tar -cf - ${{ matrix.NAME }} | pigz -p4 > ${{ matrix.NAME }}.tar.gz
          rm -rf ${{ matrix.NAME }}
          ls -lh
          npm install axios yargs fs mime-types form-data axios-retry
          node uploadToZenodo.js --recordName "Custom Kraken 2 database named ${{ matrix.NAME }}" --recordDescription 'acc_id:${{ matrix.ACC_ID }}, acc_name:${{ matrix.ACC_NAME }}, taxid:${{ matrix.TAXID }}, libs:${{ matrix.LIBS }}; see https://github.com/nexomis/db-kraken2-custom' --recordCreator "Nexomis" --fileToUpload ./${{ matrix.NAME }}.tar.gz --accessToken "${{ secrets.ZENODO_TOKEN }}" > url.txt

      # // need read and write permission for workflow https://github.com/{{owner}}/{{repo}}/settings/actions
      - name: Create release 
        uses: actions/github-script@v7
        id: create_release
        with:
          script: |
            const fs = require('fs');
            const urlContent = fs.readFileSync('url.txt', 'utf8');
            let response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'v${{ matrix.VERSION }}-${{ matrix.NAME }}',
              name: 'Release ${{ matrix.NAME }} ${{ matrix.VERSION }}',
              body: `acc_id:${{ matrix.ACC_ID }}, acc_name:${{ matrix.ACC_NAME }}, taxid:${{ matrix.TAXID }}, libs:${{ matrix.LIBS }}\n\nzenodo url: ${urlContent}`
            });

